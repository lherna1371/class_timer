{"version":3,"sources":["Game.js","Loops.js","Norms.js","Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Game","props","base_game","game","deepcopy","length","addXToRow","undefined","state","position","movePosition","bind","pressKey","checkBounds","changeBoard","document","onkeydown","in_array","copy","index","push","row","substring","temp_board","this","row_index","col_index","new_row","setState","row_change","col_change","num_of_rows","num_of_cols","char_at_new_position","char_at_curr_position","alert","e","keyCode","className","React","Component","Loops","setTimeout","userAnswer","window","prompt","toLowerCase","Norms","Timer","time_in_minutes","timer_interval","handleChange","timer","event","target","value","clearInterval","time","getElementById","innerHTML","String","distance","countDownDate","Date","now","parseInt","setInterval","minutes","Math","floor","seconds","padStart","id","type","onChange","onClick","App","to","path","component","NothingComponent","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.08be1891.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Game.css';\r\n\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const base_game = [\r\n      \" ________________ \\n\",\r\n      \"|  _  |  _____|  |\\n\",\r\n      \"| | | | |  ____  |\\n\",\r\n      \"|___|     |___ | |\\n\",\r\n      \"|  _   _|______| |\\n\",\r\n      \"|_|  _|  ________|\\n\",\r\n      \"____|_____________\\n\",\r\n    ];\r\n    let game = this.deepcopy(base_game);\r\n    game[base_game.length - 1] = this.addXToRow(game[base_game.length - 1], 0);\r\n\r\n    if (this.state === undefined || this.state.game === undefined) {\r\n      this.state = {\r\n        base_game: base_game,\r\n        game: game,\r\n        position: [base_game.length - 1, 0],\r\n      };\r\n    }\r\n\r\n    this.movePosition = this.movePosition.bind(this);\r\n    this.pressKey = this.pressKey.bind(this);\r\n    this.checkBounds = this.checkBounds.bind(this);\r\n    this.changeBoard = this.changeBoard.bind(this);\r\n    this.changeBoard();\r\n\r\n    // Move within the game\r\n    document.onkeydown = this.pressKey;\r\n  }\r\n\r\n  deepcopy(in_array) {\r\n    let copy = [];\r\n    for (let index = 0; index < in_array.length; index++) {\r\n      copy.push(in_array[index]);\r\n    }\r\n    return copy;\r\n  }\r\n\r\n  addXToRow(row, index) {\r\n    return row.substring(0, index) + \"x\" + row.substring(index + 1);\r\n  }\r\n\r\n  changeBoard() {\r\n    let temp_board = this.deepcopy(this.state.base_game);\r\n    let row_index = this.state.position[0];\r\n    let col_index = this.state.position[1];\r\n    let new_row = this.addXToRow(temp_board[row_index], col_index);\r\n    temp_board[row_index] = new_row;\r\n    this.setState({game: temp_board});\r\n  }\r\n\r\n  checkBounds(row_change, col_change) {\r\n    let num_of_rows = this.state.game.length;\r\n    let num_of_cols = this.state.game[0].length;\r\n    let row_index = this.state.position[0] + row_change;\r\n    let col_index = this.state.position[1] + col_change;\r\n\r\n    // Check that the indices in this.state.position are in bounds\r\n    if (row_index > num_of_rows - 1) {\r\n      return false;\r\n    }\r\n    if (row_index < 0) {\r\n      return false;\r\n    }\r\n    if (col_index > num_of_cols - 2) { // Exclude the '\\n' character\r\n      return false;\r\n    }\r\n    if (col_index < 0) {\r\n      return false;\r\n    }\r\n\r\n    // Check not running into a wall\r\n    let char_at_new_position = this.state.game[row_index][col_index];\r\n    if (char_at_new_position === \"|\") {\r\n      return false;\r\n    }\r\n\r\n    // Check not running into a floor\r\n    if (row_change === -1 && char_at_new_position === \"_\") { // going up\r\n      return false;\r\n    }\r\n    let char_at_curr_position = this.state.base_game[this.state.position[0]][this.state.position[1]];\r\n    if (row_change === 1 && char_at_curr_position === \"_\") {// going down\r\n      return false;\r\n    }\r\n\r\n    // Check if won the game!\r\n    if (row_index === num_of_rows - 1 && col_index === num_of_cols - 2) {\r\n      alert(\"You win! Congrats!\");\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  movePosition(row_change, col_change) {\r\n    // Check that you can move\r\n    if (this.checkBounds(row_change, col_change) === false) {\r\n      return; // Can't move\r\n    }\r\n\r\n    // Change the position in state\r\n    this.setState({\r\n      position:[\r\n        this.state.position[0] + row_change,\r\n        this.state.position[1] + col_change,\r\n      ]\r\n    });\r\n    this.changeBoard();\r\n  }\r\n\r\n  pressKey(e) {\r\n    // Move within the game\r\n    switch (e.keyCode) {\r\n      case 37:\r\n        // left\r\n        this.movePosition(0, -1);\r\n        break;\r\n      case 38:\r\n        // up\r\n        this.movePosition(-1, 0);\r\n        break;\r\n      case 39:\r\n        // right\r\n        this.movePosition(0, 1);\r\n        break;\r\n      case 40:\r\n        // down\r\n        this.movePosition(1, 0);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"title\">\r\n        <h4 className=\"header\">Game:</h4>\r\n        <pre className=\"game\">{this.state.game}</pre>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport './Loops.css';\r\n\r\n\r\nexport default class Loops extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // wait for a render\r\n    setTimeout(() => {\r\n      let userAnswer = window.prompt(\"WE GO AGAIN?\");\r\n\r\n      while(typeof(userAnswer) == \"string\" && userAnswer.toLowerCase() === \"yes\") {\r\n          userAnswer = window.prompt(\"WE GO AGAIN?\");\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"title\">\r\n        <h4 className=\"header\">Looooooooooooops</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Norms.css';\r\n\r\n\r\nexport default class Norms extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"title\">\r\n        <h4 className=\"header\">Classroom Norms:</h4>\r\n\r\n        <div className=\"norms\">\r\n          <ul>\r\n            <li>Follow NJIT’s code of ethics</li>\r\n            <li>Mute yourself</li>\r\n            <li>Put pronouns as part of your Zoom names.</li>\r\n            <li>Be present in class from beginning to ending. Attendance will be taken at beginning and ending. Please message one of the instructors if you need to logout</li>\r\n            <li>Raise hand or type in chat for questions</li>\r\n            <li>We strongly encourage turning on video, so you feel present in the classroom</li>\r\n            <li>Be respectful</li>\r\n            <li>5 minute break on the hour mark</li>\r\n            <li>Use Slack for communication. Instructors will respond before the next class starts</li>\r\n            <li>Submit any required quizzes and/or assignments before the next class meeting (grading policy in Canvas Syllabus)</li>\r\n            <li>Bring your 'A' game, with positivity!</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <h5 className=\"header2\">After Learning Git</h5>\r\n\r\n        <div className=\"norms\">\r\n          <ul>\r\n            <li>Have the Activity cloned locally before every class so you can follow along with us</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport './Timer.css';\r\n\r\n\r\nexport default class Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if (this.state === undefined || this.state.time_in_minutes === undefined) {\r\n      this.state = {\r\n        time_in_minutes: 5,\r\n        timer_interval: null\r\n      };\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.timer = this.timer.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({time_in_minutes: event.target.value});\r\n  }\r\n\r\n  timer() {\r\n    if (this.state.timer_interval != null) {\r\n      clearInterval(this.state.timer_interval);\r\n    }\r\n\r\n    let time = this.state.time_in_minutes;\r\n    document.getElementById(\"timer\").innerHTML = String(time) + \":00\";\r\n\r\n    const start = Date.now();\r\n    const delta = parseInt(time) * 60000;  // time # of minutes\r\n    const countDownDate = start + delta;\r\n    let distance;\r\n\r\n    // Update each second\r\n    this.setState({\r\n      timer_interval: setInterval(function() {\r\n        // If still on the Timer page\r\n        if (document.getElementById(\"timer\") !== null) {\r\n          distance = countDownDate - Date.now();\r\n\r\n          var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n          var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n          // Set value in HTML\r\n          document.getElementById(\"timer\").innerHTML = String(minutes) + \":\" + String(seconds).padStart(2, \"0\");\r\n\r\n          // If the count down is finished, write some text\r\n          if (distance <= 0) {\r\n            if (this.state !== undefined) {\r\n              clearInterval(this.state.timer_interval);\r\n            }\r\n            document.getElementById(\"timer\").innerHTML = \"Class Time!\";\r\n          }\r\n        }\r\n      }, 1000)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"title\">\r\n        <h2 className=\"break_timer\">Break Timer:</h2>\r\n\r\n        <label id=\"label\">\r\n          Time:\r\n          <input type=\"text\" value={this.state.time_in_minutes} onChange={this.handleChange} />\r\n        </label>\r\n        <button onClick={this.timer}>Start</button>\r\n\r\n        <h1 id=\"timer\">5:00</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Game from \"./Game\";\r\nimport Loops from \"./Loops\";\r\nimport Norms from \"./Norms\";\r\nimport Timer from \"./Timer\";\r\nimport \"./App.css\";\r\nimport { Link, Switch,Route, BrowserRouter } from 'react-router-dom'\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          <div className=\"navbar\">\r\n            <Link className=\"pageLink\" to=\"/timer\">Timer</Link>\r\n            <Link className=\"pageLink\" to=\"/norms\">Class Norms</Link>\r\n            <Link className=\"pageLink\" to=\"/game\">Game</Link>\r\n            {/* <Link className=\"pageLink\" to=\"/again\">AGAIN</Link>\r\n            <Link className=\"pageLink\" to=\"/nothing\">Nothing</Link> */}\r\n          </div>\r\n          <Switch>\r\n            <Route path=\"/timer\" component={Timer}/>\r\n            <Route path=\"/norms\" component={Norms}/>\r\n            <Route path=\"/game\" component={Game}/>\r\n            <Route path=\"/again\" component={Loops}/>\r\n            <Route path=\"/nothing\" component={NothingComponent}/>\r\n            <Route exact path=\"/\" component={Timer}/>\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst NothingComponent = () => {\r\n  return <div>Nothing</div>\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}